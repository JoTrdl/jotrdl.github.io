parcelRequire=function(e,r,n,t){var i="function"==typeof parcelRequire&&parcelRequire,o="function"==typeof require&&require;function u(n,t){if(!r[n]){if(!e[n]){var f="function"==typeof parcelRequire&&parcelRequire;if(!t&&f)return f(n,!0);if(i)return i(n,!0);if(o&&"string"==typeof n)return o(n);var c=new Error("Cannot find module '"+n+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[n][1][r]||r},p.cache={};var l=r[n]=new u.Module(n);e[n][0].call(l.exports,p,l,l.exports,this)}return r[n].exports;function p(e){return u(p.resolve(e))}}u.isParcelRequire=!0,u.Module=function(e){this.id=e,this.bundle=u,this.exports={}},u.modules=e,u.cache=r,u.parent=i,u.register=function(r,n){e[r]=[function(e,r){r.exports=n},{}]};for(var f=0;f<n.length;f++)u(n[f]);if(n.length){var c=u(n[n.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=c:"function"==typeof define&&define.amd?define(function(){return c}):t&&(this[t]=c)}return u}({"dnrf":[function(require,module,exports) {
var define;
var e;!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof e&&e.amd?e(n):t.Stats=n()}(this,function(){var e=function(){function t(e){return i.appendChild(e.dom),e}function n(e){for(var t=0;t<i.children.length;t++)i.children[t].style.display=t===e?"block":"none";l=e}var l=0,i=document.createElement("div");i.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",i.addEventListener("click",function(e){e.preventDefault(),n(++l%i.children.length)},!1);var a=(performance||Date).now(),o=a,r=0,f=t(new e.Panel("FPS","#0ff","#002")),c=t(new e.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var d=t(new e.Panel("MB","#f08","#201"));return n(0),{REVISION:16,dom:i,addPanel:t,showPanel:n,begin:function(){a=(performance||Date).now()},end:function(){r++;var e=(performance||Date).now();if(c.update(e-a,200),e>o+1e3&&(f.update(1e3*r/(e-o),100),o=e,r=0,d)){var t=performance.memory;d.update(t.usedJSHeapSize/1048576,t.jsHeapSizeLimit/1048576)}return e},update:function(){a=this.end()},domElement:i,setMode:n}};return e.Panel=function(e,t,n){var l=1/0,i=0,a=Math.round,o=a(window.devicePixelRatio||1),r=80*o,f=48*o,c=3*o,d=2*o,p=3*o,u=15*o,s=74*o,m=30*o,h=document.createElement("canvas");h.width=r,h.height=f,h.style.cssText="width:80px;height:48px";var v=h.getContext("2d");return v.font="bold "+9*o+"px Helvetica,Arial,sans-serif",v.textBaseline="top",v.fillStyle=n,v.fillRect(0,0,r,f),v.fillStyle=t,v.fillText(e,c,d),v.fillRect(p,u,s,m),v.fillStyle=n,v.globalAlpha=.9,v.fillRect(p,u,s,m),{dom:h,update:function(f,y){l=Math.min(l,f),i=Math.max(i,f),v.fillStyle=n,v.globalAlpha=1,v.fillRect(0,0,r,u),v.fillStyle=t,v.fillText(a(f)+" "+e+" ("+a(l)+"-"+a(i)+")",c,d),v.drawImage(h,p+o,u,s-o,m,p,u,s-o,m),v.fillRect(p+s-o,u,o,m),v.fillStyle=n,v.globalAlpha=.9,v.fillRect(p+s-o,u,o,a((1-f/y)*m))}}},e});
},{}],"pXSu":[function(require,module,exports) {
module.exports="#define GLSLIFY 1\nuniform float dt;\n\nuniform vec2 d;\nvec2 dx = vec2(d.x, 0);\nvec2 dy = vec2(0, d.y);\n\nconst float DIFFUSION = 0.999;\n\nvoid main() {\n  gl_FragColor = texture2D(sampler, uv);\n\n  vec2 v = texture2D(sampler, uv).xy;\n  vec2 pos = uv - d * dt * v;\n\n  gl_FragColor.xy = texture2D(sampler, pos).xy * DIFFUSION;\n}\n";
},{}],"3WOu":[function(require,module,exports) {
module.exports="#define GLSLIFY 1\nuniform float dt;\n\nuniform vec2 d;\nvec2 dx = vec2(d.x, 0);\nvec2 dy = vec2(0, d.y);\n\nfloat alpha = - d.x * d.x;\nfloat rBeta = .25;\n\nfloat samplePressure(sampler2D field, vec2 pos){\n  vec2 offset = vec2(0.0, 0.0);\n\n  if (pos.x < 0.0)      offset.x = 1.0;\n  else if (pos.x > 1.0) offset.x = -1.0;\n  if (pos.y < 0.0)      offset.y = 1.0;\n  else if (pos.y > 1.0) offset.y = -1.0;\n\n  return texture2D(field, pos + offset * d).w;\n}\n\nvoid main() {\n  gl_FragColor = texture2D(sampler, uv);\n\n  float l = samplePressure(sampler, uv - dx);\n  float r = samplePressure(sampler, uv + dx);\n  float b = samplePressure(sampler, uv - dy);\n  float t = samplePressure(sampler, uv + dy);\n\n  vec2 v = texture2D(sampler, uv).xy;\n\n  gl_FragColor.xy = v - d * vec2(r - l, t - b);\n}\n";
},{}],"5oOS":[function(require,module,exports) {
module.exports="#define GLSLIFY 1\nuniform float dt;\n\nuniform vec2 d;\nvec2 dx = vec2(d.x, 0);\nvec2 dy = vec2(0, d.y);\n\nvec2 sampleVelocity(sampler2D field, vec2 pos){\n  vec2 offset = vec2(0.0, 0.0);\n  vec2 multiplier = vec2(1.0, 1.0);\n\n  if (pos.x < 0.0) { offset.x = 1.0; multiplier.x = -1.0;} \n  else if(pos.x > 1.0) { offset.x = -1.0; multiplier.x = -1.0;}\n\n  if (pos.y < 0.0) { offset.y = 1.0; multiplier.y = -1.0;}\n  else if(pos.y > 1.0) { offset.y = -1.0; multiplier.y = -1.0;}\n\n  return multiplier * texture2D(field, pos + offset * d).xy;\n}\n\nvoid main() {\n  gl_FragColor = texture2D(sampler, uv);\n\n  float l = sampleVelocity(sampler, uv - dx).x;\n  float r = sampleVelocity(sampler, uv + dx).x;\n  float b = sampleVelocity(sampler, uv - dy).y;\n  float t = sampleVelocity(sampler, uv + dy).y;\n\n  gl_FragColor.z = .5 * d.x * ((r - l) + (t - b));\n}\n";
},{}],"Domz":[function(require,module,exports) {
module.exports="#define GLSLIFY 1\nuniform float dt;\n\nuniform vec2 d;\nvec2 dx = vec2(d.x, 0);\nvec2 dy = vec2(0, d.y);\n\nfloat alpha = - (1.0/d.x * 1.0/d.y);\nfloat rBeta = .25;\n\nfloat samplePressure(sampler2D field, vec2 pos){\n  vec2 offset = vec2(0.0, 0.0);\n\n  if (pos.x < 0.0)      offset.x = 1.0;\n  else if (pos.x > 1.0) offset.x = -1.0;\n  if (pos.y < 0.0)      offset.y = 1.0;\n  else if (pos.y > 1.0) offset.y = -1.0;\n\n  return texture2D(field, pos + offset * d).w;\n}\n\nvoid main() {\n  gl_FragColor = texture2D(sampler, uv);\n\n  float l = samplePressure(sampler, uv - dx);\n  float r = samplePressure(sampler, uv + dx);\n  float b = samplePressure(sampler, uv - dy);\n  float t = samplePressure(sampler, uv + dy);\n\n  float div = texture2D(sampler, uv).z;\n\n  gl_FragColor.w = (l + r + b + t + div * alpha) * rBeta;\n}\n";
},{}],"ag7a":[function(require,module,exports) {
module.exports="#define GLSLIFY 1\nuniform sampler2D field;\nuniform float dt;\nuniform vec2 d;\n\nvec2 dx = vec2(d.x, 0);\nvec2 dy = vec2(0, d.y);\n\nvoid main() {\n  gl_FragColor = texture2D(sampler, uv);\n\n  vec2 l = texture2D(field, uv - dx).xy;\n  vec2 r = texture2D(field, uv + dx).xy;\n  vec2 b = texture2D(field, uv - dy).xy;\n  vec2 t = texture2D(field, uv + dy).xy;\n\n  gl_FragColor.xy = .5 * d * ((t.x - b.x) - (r.y - l.y));\n}\n";
},{}],"F4Rt":[function(require,module,exports) {
module.exports="#define GLSLIFY 1\nuniform sampler2D curl;\nuniform float dt;\nuniform vec2 d;\n\nvec2 dx = vec2(d.x, 0);\nvec2 dy = vec2(0, d.y);\n\nconst float VORTICITY = 0.00001;\n\nvoid main() {\n  gl_FragColor = texture2D(sampler, uv);\n\n  vec2 v = texture2D(sampler, uv).xy;\n\n  vec2 l = texture2D(curl, uv - dx).xy;\n  vec2 r = texture2D(curl, uv + dx).xy;\n  vec2 b = texture2D(curl, uv - dy).xy;\n  vec2 t = texture2D(curl, uv + dy).xy;\n  vec2 c = texture2D(curl, uv).xy;\n\n  vec2 dw = normalize(.5 * d * vec2(t.x - b.x, r.y - l.y) + VORTICITY) * vec2(-1, 1);\n\n  gl_FragColor.xy += dw * c * dt * VORTICITY;\n}\n";
},{}],"0D9+":[function(require,module,exports) {
module.exports="#define GLSLIFY 1\nuniform sampler2D field;\nuniform float dt;\nuniform vec2 d;\n\nuniform float mousedown;\nuniform vec2 mousepos;\nuniform vec2 lastMousepos;\n\nfloat force = pow(dt, 4.0);\n\nvoid main() {\n  gl_FragColor = texture2D(sampler, uv);\n  vec2 mouseVelocity = -(lastMousepos - mousepos)/force;\n\n  float gaussian = -dot(uv - mousepos, uv - mousepos);\n  vec2 accel = resolution.xy * mousedown * mouseVelocity * exp(gaussian * 500.0);\n\n  gl_FragColor.xy += accel;\n}\n";
},{}],"ZEh1":[function(require,module,exports) {
module.exports="#define GLSLIFY 1\nuniform float dt;\nuniform vec2 d;\n\nuniform float mousedown;\nuniform vec2 mousepos;\nuniform vec2 lastMousepos;\n\nconst float DIFFUSION = 0.995;\nconst vec3 DYE_COLOR = vec3(0.1, 0.3, 0.7) / 4.0;\n\nfloat force = pow(dt, 4.0);\n\nvoid main() {\n  gl_FragColor = texture2D(sampler, uv);\n  vec2 mouseVelocity = -(lastMousepos - mousepos)/force;\n  float speed = length(mouseVelocity);\n  vec3 color = clamp(speed, 0., 1.) * DYE_COLOR;\n\n  float gaussian = -dot(uv - mousepos, uv - mousepos);\n  float density = mousedown * exp(gaussian * 2000.0);\n\n  gl_FragColor.xyz = gl_FragColor.xyz * DIFFUSION + speed * density * color;\n  gl_FragColor.a = 1.0;\n}\n";
},{}],"/kB7":[function(require,module,exports) {
module.exports="#define GLSLIFY 1\nuniform sampler2D field;\nuniform float dt;\nuniform vec2 d;\n\nvec2 dx = vec2(d.x, 0);\nvec2 dy = vec2(0, d.y);\n\nvoid main() {\n  vec2 v = texture2D(field, uv).xy;\n  vec2 pos = uv - d * dt * v;\n\n  gl_FragColor = texture2D(sampler, pos);\n}\n";
},{}],"VXrL":[function(require,module,exports) {
module.exports="#define GLSLIFY 1\nuniform sampler2D field;\nuniform float dt;\nuniform vec2 d;\n\nvoid main( ) {\n  vec2 p = texture2D(sampler, uv).xy;\n  vec2 v = texture2D(sampler, uv).zw;\n\n  vec2 vf = texture2D(field, p).xy;\n  v += (vf - v) * .5;\n  p += dt * v * d;\n\n  gl_FragColor = vec4(p, v);\n}\n";
},{}],"ircP":[function(require,module,exports) {
module.exports="#define GLSLIFY 1\nvoid main( ) {\n  gl_FragColor = vec4(uv, 0.0, 0.0);\n}\n";
},{}],"Wfix":[function(require,module,exports) {
module.exports="#define GLSLIFY 1\nuniform sampler2D particlesData;\n\n//const vec4 color = vec4(1.0, 0.5, 0.166, 0.66); // gold\nconst vec4 color = vec4(0.0, 0.33, 2.0, 1.00);  // blue\nconst vec3 gamma = vec3(1.0/2.2);\n\nvoid main( ) {\n  vec2 p = texture2D(particlesData, uv).xy;\n  vec2 v = texture2D(particlesData, uv).zw;\n  \n  float speed = length(v);\n  gl_FragColor = clamp(speed, 0., 1.) * color;\n\n  gl_FragColor.rgb = pow(gl_FragColor.rgb, gamma);\n\n  float dist = distance(gl_PointCoord, vec2(0.5));\n  gl_FragColor.a = 1.0 - smoothstep(0.45, 0.5, dist);\n}\n";
},{}],"CH6V":[function(require,module,exports) {
module.exports="#define GLSLIFY 1\nattribute vec2 position;\nvarying vec2 uv;\n\nuniform vec3 resolution;\nuniform sampler2D particlesData;\n\nfloat ratio = resolution.x;\n\nvoid main() {\n  vec4 data = texture2D(particlesData, position);\n  vec2 point = data.xy;\n\n  uv = position;\n  float size = 1.0;\n  vec2 pos = point * 2.0 - 1.0;\n  gl_PointSize = size * ratio;\n  gl_Position = vec4(pos.x, pos.y, 0, 1);\n}\n";
},{}],"IX8P":[function(require,module,exports) {
module.exports="#define GLSLIFY 1\nuniform sampler2D field;\nuniform sampler2D curl;\nuniform sampler2D density;\nuniform sampler2D particles;\n\n// #define OUTPUT_VELOCITY\n// #define OUTPUT_PRESSURE\n// #define OUTPUT_CURL\n\nvoid main() {\n  vec4 particles = texture2D(particles, uv);\n  vec3 density = texture2D(density, uv).xyz;\n  \n  gl_FragColor = particles + vec4(density, 1.0);\n\n  #ifdef OUTPUT_VELOCITY\n    vec2 velocity = texture2D(field, uv).xy;\n    float v = length(velocity) / 10.0;\n    gl_FragColor = vec4(v, v, v, 1.0);\n  #endif\n\n  #ifdef OUTPUT_PRESSURE\n    float pressure = texture2D(field, uv).w;\n    float v = pressure / 2000.0;\n    gl_FragColor = vec4(v, v, v, 1.0);\n  #endif\n\n  #ifdef OUTPUT_CURL\n    float vx1 = texture2D(curl, uv - dx).y;\n    float vx2 = texture2D(curl, uv + dx).y;\n    float uy1 = texture2D(curl, uv - dy).x;\n    float uy2 = texture2D(curl, uv + dy).x;\n\n    float curl = vx2 - vx1 - uy2 + uy1;\n    float value = (curl * 1000.0);\n    gl_FragColor = vec4(value, max(value * .2, -value * .3), -value, 1.0);\n  #endif\n}\n";
},{}],"NAw/":[function(require,module,exports) {
var define;
var t;function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}!function(r){"use strict";var i={},s="undefined"!=typeof devicePixelRatio&&devicePixelRatio||1;i.get3DContext=function(t,e){for(var r=["webgl","experimental-webgl"],i=null,s=0;s<r.length;s++){try{i=t.getContext(r[s],e)}catch(o){}if(i)break}return i},i.createProgram=function(t,e,r){var i,s,o=t.createProgram();try{i=this.compileShader(t,e,t.VERTEX_SHADER),s=this.compileShader(t,r,t.FRAGMENT_SHADER)}catch(h){throw t.deleteProgram(o),h}if(t.attachShader(o,i),t.deleteShader(i),t.attachShader(o,s),t.deleteShader(s),t.linkProgram(o),t.validateProgram(o),!t.getProgramParameter(o,t.LINK_STATUS)){var a=t.getProgramInfoLog(o);throw new Error("Could not compile WebGL program:\n"+a)}return o},i.compileShader=function(t,e,r){var i=t.createShader(r);if(t.shaderSource(i,e),t.compileShader(i),!t.getShaderParameter(i,t.COMPILE_STATUS)){for(var s=t.getShaderSource(i).split("\n"),o="",a=0;a<s.length;a++)o+=a+1+"."+s[a]+"\n";throw new Error("GLSL Compilation Error:\n"+t.getShaderInfoLog(i)+"\n"+o)}return i},i.createTexture=function(t,e,r,i){var s=t.createTexture(),o=s.format=i&&i.format||t.RGBA,a=s.level=i&&i.level||0,h=s.type=i&&i.type||t.UNSIGNED_BYTE,n=s.border=i&&i.border||0,u=i&&i.minFilter||t.NEAREST,f=i&&i.magFilter||t.NEAREST,l=i&&i.wrapS||t.CLAMP_TO_EDGE,p=i&&i.wrapT||t.CLAMP_TO_EDGE,c=i&&i.data||null,d=i&&i.flipY||!1,m=i&&i.preAlpha||!1;if(h===t.FLOAT){var E=t.getSupportedExtensions();if(E.indexOf("OES_texture_float")<0)throw new Error("Type gl.FLOAT is not supported.");if(t.getExtension("OES_texture_float"),u===t.LINEAR||f===t.LINEAR){if(E.indexOf("OES_texture_float_linear")<0)throw new Error("Type gl.FLOAT with filter gl.LINEAR is not supported.");t.getExtension("OES_texture_float_linear")}}return t.bindTexture(t.TEXTURE_2D,s),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,f),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,u),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,l),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,p),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,d),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,m),!c||c instanceof ArrayBuffer?t.texImage2D(t.TEXTURE_2D,a,o,e,r,n,o,h,c):t.texImage2D(t.TEXTURE_2D,a,o,o,h,c),t.bindTexture(t.TEXTURE_2D,null),s};var o=["attribute vec2 position;","varying vec2 uv;","void main() {","  uv = position;","  vec2 pos = position * 2.0 - 1.0;","  gl_Position = vec4(pos.x, pos.y, 0, 1);","}"].join("\n"),a=["#ifdef GL_FRAGMENT_PRECISION_HIGH","  precision highp float;","#else","  precision mediump float;","#endif","uniform sampler2D sampler;","uniform vec3 resolution;","uniform int frame;","uniform float time;","varying vec2 uv;"].join("\n"),h=["void main() {","  gl_FragColor = texture2D(sampler, uv);","}"].join("\n"),n=[a,h].join("\n"),u=new Float32Array([-1,-1,1,-1,-1,1,1,-1,1,1,-1,1]),f=u.length/2,l=function(t,e,r,i,s,o){var a=t.getUniformLocation(e,i);if(null!==s&&a){var h=s.length?s:[s];if(o){r.call(t,a,s);for(var n,u=o.length?o:[o],f=0;f<u.length;f++)n=u[f].isShadUTexture&&u[f].output||u[f],t.activeTexture(t.TEXTURE0+h[f]),t.bindTexture(t.TEXTURE_2D,n)}else{var l=[a].concat(h);r.apply(t,l)}}},p=function(t,e,r,i,s,o){var a=t.getAttribLocation(e,r);a<0||(t.bindBuffer(t.ARRAY_BUFFER,s),t.bufferData(t.ARRAY_BUFFER,o,t.STATIC_DRAW),t.bindAttribLocation(e,a,"position"),t.vertexAttribPointer(a,i,t.FLOAT,!1,0,0),t.enableVertexAttribArray(a))},c=i.Texture=function(t,e){this.isShadUTexture=!0,this.options=e||{},this.gl=t,t&&t instanceof WebGLRenderingContext?(this.width=(this.options.width||t.canvas.offsetWidth)*s,this.height=(this.options.height||t.canvas.offsetHeight)*s,this.viewportWidth=this.options.viewportWidth||t.canvas.width,this.viewportHeight=this.options.viewportHeight||t.canvas.height,this.uResolution=[this.width/this.height,1,s],this.reset()):console.log("Error, paramater [gl] must be a WebGL context")};c.prototype.reset=function(t){var e=this.gl;return this.shaders=[],this.attributes=[],this.uniforms=[],this.frameBuffer=e.createFramebuffer(),this.textures=[i.createTexture(e,this.width,this.height,this.options.texture),i.createTexture(e,this.width,this.height,this.options.texture)],this.frame=0,this.time=0,this.output=!0!==t&&this.textures[0]||this.output,this.quadBuffer=e.createBuffer(),this.paintShader=i.createProgram(e,o,n),e.bindBuffer(e.ARRAY_BUFFER,this.quadBuffer),this.quadVertices=new Float32Array(u),this.geometryBuffer=this.quadBuffer,this.vertices=this.quadVertices,this.arrays=[e.TRIANGLE_STRIP,0,f],this.options.geometry&&(this.vertices=this.options.geometry.vertices,this.arrays=this.options.geometry.arrays),this},c.prototype.fragment=function(t,e){return this.vertexFragment(o,t,e)},c.prototype.vertexFragment=function(t,e,r,s){var o=i.createProgram(this.gl,t,a+"\n"+e);for(var h in this.shaders.push(o),this.uniforms.push(r||{}),s)s[h].buffer=this.gl.createBuffer();return this.attributes.push(s||{}),this},c.prototype.image=function(t,e){var r={sampler:{type:"t",value:i.createTexture(this.gl,this.width,this.height,{flipY:e||!0,data:t})}};return this.vertexFragment(o,h,r)},c.prototype.paint=function(){if(!this.output)return console.log("Error: no output to paint. Call render() at least once."),this;var t=this.gl;return t.useProgram(this.paintShader),t.bindFramebuffer(t.FRAMEBUFFER,null),p(t,this.paintShader,"position",2,this.quadBuffer,this.quadVertices),l(t,this.paintShader,t.uniform1i,"sampler",0,this.output),t.viewport(0,0,this.viewportWidth,this.viewportHeight),t.drawArrays(t.TRIANGLE_STRIP,0,f),this},c.prototype.resize=function(t,e,r,i){var o=this.gl;this.width=t||o.canvas.offsetWidth*s,this.height=e||o.canvas.offsetHeight*s,this.viewportWidth=r||o.canvas.width,this.viewportHeight=i||o.canvas.height,this.uResolution=[this.width/this.height,1,s];for(var a=0;a<this.textures.length;a++){var h=this.textures[a];o.bindTexture(o.TEXTURE_2D,h),o.texImage2D(o.TEXTURE_2D,h.level,h.format,this.width,this.height,h.border,h.format,h.type,null)}return this},c.prototype.render=function(){var t,e,r,i,s=this.gl;for(this.time=.001*Date.now(),t=0;t<this.shaders.length;t++){if(i=0,r=this.output,e=++this.frame%2,this.output=this.textures[e],this.shaders[t].callback){var o=this.shaders[t].callback(r);if(o){this.output=o;continue}}for(var a in s.useProgram(this.shaders[t]),s.bindFramebuffer(s.FRAMEBUFFER,this.frameBuffer),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,this.output,0),p(s,this.shaders[t],"position",2,this.geometryBuffer,this.vertices),l(s,this.shaders[t],s.uniform1i,"sampler",i++,r),l(s,this.shaders[t],s.uniform1i,"frame",this.frame),l(s,this.shaders[t],s.uniform1f,"time",this.time),l(s,this.shaders[t],s.uniform3f,"resolution",this.uResolution),this.attributes)p(s,this.shaders[t],a,this.attributes[a].size,this.attributes[a].buffer,this.attributes[a].data);for(var h in this.uniforms[t]){var n=s["uniform"+this.uniforms[t][h].type],u=this.uniforms[t][h].value,f=null;"t"===this.uniforms[t][h].type&&(n=s.uniform1i,u=i++,f=this.uniforms[t][h].value),l(s,this.shaders[t],n,h,u,f)}s.viewport(0,0,this.width,this.height),s.drawArrays.apply(s,this.arrays)}return this},c.prototype.iterate=function(t){for(var e=this.shaders[this.shaders.length-1],r=this.uniforms[this.uniforms.length-1],i=0;i<t;i++)this.shaders.push(e),this.uniforms.push(r);return this},c.prototype.callback=function(t){return this.fragment(h),this.shaders[this.shaders.length-1].callback=t,this},c.prototype.clear=function(){if(!this.frame)return this;var t=this.gl;return t.bindFramebuffer(t.FRAMEBUFFER,this.frameBuffer),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT|t.STENCIL_BUFFER_BIT),this},c.prototype.write=function(t,e,r,i,s,o){var a,h=this.gl;switch(s){case h.UNSIGNED_BYTE:case h.UNSIGNED_SHORT:a=new Uint8Array(o);break;case h.FLOAT:a=new Float32Array(o);break;case h.UNSIGNED_INT:default:a=new Int32Array(o)}h.bindTexture(h.TEXTURE_2D,this.output),h.texSubImage2D(h.TEXTURE_2D,0,t,e,r,i,h.RGBA,s,a)},function(r,i){"function"==typeof t&&t.amd?t([],i):"object"===("undefined"==typeof exports?"undefined":e(exports))?module.exports=i():r.ShadU=i()}(r,function(){return i})}(this);
},{}],"Zx9M":[function(require,module,exports) {
"use strict";var e=g(require("stats.js")),t=g(require("./fragments/advect")),a=g(require("./fragments/substract")),r=g(require("./fragments/divergence")),u=g(require("./fragments/jacobi")),n=g(require("./fragments/curl")),l=g(require("./fragments/vorticity")),i=g(require("./fragments/velocity-add")),d=g(require("./fragments/density-add")),s=g(require("./fragments/density-advect")),f=g(require("./fragments/particles-data")),o=g(require("./fragments/particles-init")),m=g(require("./fragments/particles-fragment")),v=g(require("./fragments/particles-vertex")),c=g(require("./fragments/visualizer")),p=g(require("shadu"));function g(e){return e&&e.__esModule?e:{default:e}}var h=window.innerWidth,w=window.innerHeight,y=256,E=16/60,q=65536,A=Math.ceil(Math.sqrt(q)),L=document.getElementById("canvas");L.width=h,L.height=w;var T=new e.default;document.location.search.match(/nostats/)||document.body.appendChild(T.domElement);var x=p.default.get3DContext(L,{premultipliedAlpha:!1,alpha:!1,depth:!1,stencil:!1});x.disable(x.DEPTH_TEST),x.disable(x.CULL_FACE),x.disable(x.DITHER),x.blendFunc(x.SRC_ALPHA,x.ONE_MINUS_SRC_ALPHA);for(var F={width:y,height:y,texture:{type:x.FLOAT,minFilter:x.LINEAR,magFilter:x.LINEAR,wrapS:x.REPEAT,wrapT:x.REPEAT}},D={d:{type:"2f",value:[1/y,1/y]},dt:{type:"1f",value:E},mousedown:{type:"1f",value:0},lastMousepos:{type:"2f",value:[0,0]},mousepos:{type:"2f",value:[0,0]},field:{type:"t",value:null},curl:{type:"t",value:null},density:{type:"t",value:null},particlesData:{type:"t",value:null},particles:{type:"t",value:null}},b=[],N=0,R=A*A;N<R;N++)b.push(N%A/A),b.push(Math.floor(N/A)/A);D.particlesData.value=new p.default.Texture(x,{width:A,height:A,texture:{type:x.FLOAT}}).fragment(o.default).render().reset(!0).fragment(f.default,D),D.particles.value=new p.default.Texture(x,{texture:{type:x.FLOAT},geometry:{vertices:new Float32Array(b),arrays:[x.POINTS,0,b.length/2]}}).vertexFragment(v.default,m.default,D),D.density.value=new p.default.Texture(x,F).fragment(d.default,D).fragment(s.default,D),D.curl.value=new p.default.Texture(x,F).fragment(n.default,D),D.field.value=new p.default.Texture(x,F).fragment(t.default,D).callback(function(){D.curl.value.render(),D.density.value.render(),D.particlesData.value.render()}).fragment(i.default,D).fragment(l.default,D).fragment(r.default,D).fragment(u.default,D).iterate(8).fragment(a.default,D);var I=new p.default.Texture(x,{texture:{minFilter:x.LINEAR,magFilter:x.LINEAR}}).fragment(c.default,D);window.addEventListener("resize",function(){h=L.width=window.innerWidth,w=L.height=window.innerHeight,I.resize(h,w)}),document.addEventListener("mouseup",function(e){e.preventDefault(),D.mousedown.value=0}),document.addEventListener("mousedown",function(e){e.preventDefault(),D.mousedown.value=1}),document.addEventListener("mousemove",function(e){e.preventDefault();var t=(e.offsetX/h*y|0)/y,a=1-(e.offsetY/w*y|0)/y;D.lastMousepos.value=D.mousepos.value,D.mousepos.value=[t,a]});var _=function e(){requestAnimationFrame(e),T.update(),D.field.value.render(),x.enable(x.BLEND),D.particles.value.clear().render(),x.disable(x.BLEND),I.render().paint()};_();
},{"stats.js":"dnrf","./fragments/advect":"pXSu","./fragments/substract":"3WOu","./fragments/divergence":"5oOS","./fragments/jacobi":"Domz","./fragments/curl":"ag7a","./fragments/vorticity":"F4Rt","./fragments/velocity-add":"0D9+","./fragments/density-add":"ZEh1","./fragments/density-advect":"/kB7","./fragments/particles-data":"VXrL","./fragments/particles-init":"ircP","./fragments/particles-fragment":"Wfix","./fragments/particles-vertex":"CH6V","./fragments/visualizer":"IX8P","shadu":"NAw/"}]},{},["Zx9M"], null)
//# sourceMappingURL=fluid.9586165f.map